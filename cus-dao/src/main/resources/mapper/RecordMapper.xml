<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zpq.dao.RecordMapper">
	<resultMap id="BaseResultMap" type="zpq.bean.Record">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="cusID" property="cusid" jdbcType="INTEGER" />
		<result column="CssID" property="cssid" jdbcType="INTEGER" />
		<result column="Datetime" property="datetime" jdbcType="TIMESTAMP" />
		<result column="mmID" property="mmid" jdbcType="INTEGER" />
		<result column="OrderID" property="orderid" jdbcType="INTEGER" />
		<result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="MmAgree" property="mmagree" jdbcType="BIT" />
		<result column="CusAgree" property="cusagree" jdbcType="BIT" />
		<result column="MaiDateSt" property="maidatest" jdbcType="TIMESTAMP" />
		<result column="MaiDateEd" property="maidateed" jdbcType="TIMESTAMP" />
		<result column="Status" property="status" jdbcType="CHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="zpq.bean.RecordWithBLOBs"
		extends="BaseResultMap">
		<result column="AppRemark" property="appremark" jdbcType="LONGVARCHAR" />
		<result column="cusEva" property="cuseva" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		ID, cusID, CssID, Datetime, mmID, OrderID, CreateDate, MmAgree, CusAgree,
		MaiDateSt,
		MaiDateEd, Status
	</sql>
	<sql id="Blob_Column_List">
		AppRemark, cusEva
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="zpq.bean.RecordExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="zpq.bean.RecordExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from record
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from record
		where ID = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="zpq.bean.RecordExample">
		delete from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="zpq.bean.RecordWithBLOBs">
		insert into record (ID, cusID, CssID,
		Datetime, mmID, OrderID,
		CreateDate, MmAgree, CusAgree,
		MaiDateSt, MaiDateEd, Status,
		AppRemark, cusEva)
		values (#{id,jdbcType=INTEGER}, #{cusid,jdbcType=INTEGER},
		#{cssid,jdbcType=INTEGER},
		#{datetime,jdbcType=TIMESTAMP}, #{mmid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER},
		#{createdate,jdbcType=TIMESTAMP}, #{mmagree,jdbcType=BIT},
		#{cusagree,jdbcType=BIT},
		#{maidatest,jdbcType=TIMESTAMP}, #{maidateed,jdbcType=TIMESTAMP}, #{status,jdbcType=CHAR},
		#{appremark,jdbcType=LONGVARCHAR}, #{cuseva,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="zpq.bean.RecordWithBLOBs">
		insert into record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="cusid != null">
				cusID,
			</if>
			<if test="cssid != null">
				CssID,
			</if>
			<if test="datetime != null">
				Datetime,
			</if>
			<if test="mmid != null">
				mmID,
			</if>
			<if test="orderid != null">
				OrderID,
			</if>
			<if test="createdate != null">
				CreateDate,
			</if>
			<if test="mmagree != null">
				MmAgree,
			</if>
			<if test="cusagree != null">
				CusAgree,
			</if>
			<if test="maidatest != null">
				MaiDateSt,
			</if>
			<if test="maidateed != null">
				MaiDateEd,
			</if>
			<if test="status != null">
				Status,
			</if>
			<if test="appremark != null">
				AppRemark,
			</if>
			<if test="cuseva != null">
				cusEva,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="cusid != null">
				#{cusid,jdbcType=INTEGER},
			</if>
			<if test="cssid != null">
				#{cssid,jdbcType=INTEGER},
			</if>
			<if test="datetime != null">
				#{datetime,jdbcType=TIMESTAMP},
			</if>
			<if test="mmid != null">
				#{mmid,jdbcType=INTEGER},
			</if>
			<if test="orderid != null">
				#{orderid,jdbcType=INTEGER},
			</if>
			<if test="createdate != null">
				#{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="mmagree != null">
				#{mmagree,jdbcType=BIT},
			</if>
			<if test="cusagree != null">
				#{cusagree,jdbcType=BIT},
			</if>
			<if test="maidatest != null">
				#{maidatest,jdbcType=TIMESTAMP},
			</if>
			<if test="maidateed != null">
				#{maidateed,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=CHAR},
			</if>
			<if test="appremark != null">
				#{appremark,jdbcType=LONGVARCHAR},
			</if>
			<if test="cuseva != null">
				#{cuseva,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="zpq.bean.RecordExample"
		resultType="java.lang.Integer">
		select count(*) from record
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update record
		<set>
			<if test="record.id != null">
				ID = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.cusid != null">
				cusID = #{record.cusid,jdbcType=INTEGER},
			</if>
			<if test="record.cssid != null">
				CssID = #{record.cssid,jdbcType=INTEGER},
			</if>
			<if test="record.datetime != null">
				Datetime = #{record.datetime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.mmid != null">
				mmID = #{record.mmid,jdbcType=INTEGER},
			</if>
			<if test="record.orderid != null">
				OrderID = #{record.orderid,jdbcType=INTEGER},
			</if>
			<if test="record.createdate != null">
				CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.mmagree != null">
				MmAgree = #{record.mmagree,jdbcType=BIT},
			</if>
			<if test="record.cusagree != null">
				CusAgree = #{record.cusagree,jdbcType=BIT},
			</if>
			<if test="record.maidatest != null">
				MaiDateSt = #{record.maidatest,jdbcType=TIMESTAMP},
			</if>
			<if test="record.maidateed != null">
				MaiDateEd = #{record.maidateed,jdbcType=TIMESTAMP},
			</if>
			<if test="record.status != null">
				Status = #{record.status,jdbcType=CHAR},
			</if>
			<if test="record.appremark != null">
				AppRemark = #{record.appremark,jdbcType=LONGVARCHAR},
			</if>
			<if test="record.cuseva != null">
				cusEva = #{record.cuseva,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update record
		set ID = #{record.id,jdbcType=INTEGER},
		cusID = #{record.cusid,jdbcType=INTEGER},
		CssID = #{record.cssid,jdbcType=INTEGER},
		Datetime = #{record.datetime,jdbcType=TIMESTAMP},
		mmID = #{record.mmid,jdbcType=INTEGER},
		OrderID = #{record.orderid,jdbcType=INTEGER},
		CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
		MmAgree = #{record.mmagree,jdbcType=BIT},
		CusAgree = #{record.cusagree,jdbcType=BIT},
		MaiDateSt = #{record.maidatest,jdbcType=TIMESTAMP},
		MaiDateEd = #{record.maidateed,jdbcType=TIMESTAMP},
		Status = #{record.status,jdbcType=CHAR},
		AppRemark = #{record.appremark,jdbcType=LONGVARCHAR},
		cusEva = #{record.cuseva,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update record
		set ID = #{record.id,jdbcType=INTEGER},
		cusID = #{record.cusid,jdbcType=INTEGER},
		CssID = #{record.cssid,jdbcType=INTEGER},
		Datetime = #{record.datetime,jdbcType=TIMESTAMP},
		mmID = #{record.mmid,jdbcType=INTEGER},
		OrderID = #{record.orderid,jdbcType=INTEGER},
		CreateDate = #{record.createdate,jdbcType=TIMESTAMP},
		MmAgree = #{record.mmagree,jdbcType=BIT},
		CusAgree = #{record.cusagree,jdbcType=BIT},
		MaiDateSt = #{record.maidatest,jdbcType=TIMESTAMP},
		MaiDateEd = #{record.maidateed,jdbcType=TIMESTAMP},
		Status = #{record.status,jdbcType=CHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="zpq.bean.RecordWithBLOBs">
		update record
		<set>
			<if test="cusid != null">
				cusID = #{cusid,jdbcType=INTEGER},
			</if>
			<if test="cssid != null">
				CssID = #{cssid,jdbcType=INTEGER},
			</if>
			<if test="datetime != null">
				Datetime = #{datetime,jdbcType=TIMESTAMP},
			</if>
			<if test="mmid != null">
				mmID = #{mmid,jdbcType=INTEGER},
			</if>
			<if test="orderid != null">
				OrderID = #{orderid,jdbcType=INTEGER},
			</if>
			<if test="createdate != null">
				CreateDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="mmagree != null">
				MmAgree = #{mmagree,jdbcType=BIT},
			</if>
			<if test="cusagree != null">
				CusAgree = #{cusagree,jdbcType=BIT},
			</if>
			<if test="maidatest != null">
				MaiDateSt = #{maidatest,jdbcType=TIMESTAMP},
			</if>
			<if test="maidateed != null">
				MaiDateEd = #{maidateed,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				Status = #{status,jdbcType=CHAR},
			</if>
			<if test="appremark != null">
				AppRemark = #{appremark,jdbcType=LONGVARCHAR},
			</if>
			<if test="cuseva != null">
				cusEva = #{cuseva,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="zpq.bean.RecordWithBLOBs">
		update record
		set cusID = #{cusid,jdbcType=INTEGER},
		CssID = #{cssid,jdbcType=INTEGER},
		Datetime = #{datetime,jdbcType=TIMESTAMP},
		mmID = #{mmid,jdbcType=INTEGER},
		OrderID = #{orderid,jdbcType=INTEGER},
		CreateDate = #{createdate,jdbcType=TIMESTAMP},
		MmAgree = #{mmagree,jdbcType=BIT},
		CusAgree = #{cusagree,jdbcType=BIT},
		MaiDateSt = #{maidatest,jdbcType=TIMESTAMP},
		MaiDateEd = #{maidateed,jdbcType=TIMESTAMP},
		Status = #{status,jdbcType=CHAR},
		AppRemark = #{appremark,jdbcType=LONGVARCHAR},
		cusEva = #{cuseva,jdbcType=LONGVARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="zpq.bean.Record">
		update record
		set cusID = #{cusid,jdbcType=INTEGER},
		CssID = #{cssid,jdbcType=INTEGER},
		Datetime = #{datetime,jdbcType=TIMESTAMP},
		mmID = #{mmid,jdbcType=INTEGER},
		OrderID = #{orderid,jdbcType=INTEGER},
		CreateDate = #{createdate,jdbcType=TIMESTAMP},
		MmAgree = #{mmagree,jdbcType=BIT},
		CusAgree = #{cusagree,jdbcType=BIT},
		MaiDateSt = #{maidatest,jdbcType=TIMESTAMP},
		MaiDateEd = #{maidateed,jdbcType=TIMESTAMP},
		Status = #{status,jdbcType=CHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<!--自定义 -->
	<resultMap id="MoreResultMap" type="zpq.bean.RecordWithBLOBs">
		<id column="ID" property="id" jdbcType="INTEGER" />
		<result column="cusID" property="cusid" jdbcType="INTEGER" />
		<result column="CssID" property="cssid" jdbcType="INTEGER" />
		<result column="Datetime" property="datetime" jdbcType="TIMESTAMP" />
		<result column="mmID" property="mmid" jdbcType="INTEGER" />
		<result column="OrderID" property="orderid" jdbcType="INTEGER" />
		<result column="CreateDate" property="createdate" jdbcType="TIMESTAMP" />
		<result column="MmAgree" property="mmagree" jdbcType="BIT" />
		<result column="CusAgree" property="cusagree" jdbcType="BIT" />
		<result column="MaiDateSt" property="maidatest" jdbcType="TIMESTAMP" />
		<result column="MaiDateEd" property="maidateed" jdbcType="TIMESTAMP" />
		<result column="Status" property="status" jdbcType="CHAR" />
		<result column="AppRemark" property="appremark" jdbcType="LONGVARCHAR" />
		<result column="cusEva" property="cuseva" jdbcType="LONGVARCHAR" />
		<association property="product" javaType="zpq.bean.Product">
			<result property="prodname" column="prodname" />
		</association>
		<association property="customer" javaType="zpq.bean.Customer">
			<result property="nickname" column="cusName" />
		</association>
		<association property="css" javaType="zpq.bean.Css">
			<result property="nickname" column="cssName" />
		</association>
		<association property="mainMan" javaType="zpq.bean.MainMan">
			<result property="nickname" column="mmName" />
		</association>
	</resultMap>
	<select id="selectMoreByExample" resultMap="MoreResultMap"
		parameterType="zpq.bean.MyOrderExample">
		select
		<if test="distinct">
			distinct
		</if>
		e.id, e.cusid, e.cssid, e.datetime, e.mmid, e.appremark, e.orderid,
		e.createdate, e.mmagree, e.cusagree,
		e.maidateSt, e.maidateEd,
		e.status, e.cusEva,
		d.prodname, a.nickname as cusName, b.nickname as
		cssName, m.nickname as mmName

		from record e
		left join myorder c on c.id=e.orderid
		left join product d on c.proid=d.id
		left join customer a on e.CusID=a.id
		left join css b on e.CssID=b.id
		left join mainman m on m.id = e.mmid
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
</mapper>