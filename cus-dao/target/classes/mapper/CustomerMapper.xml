<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zpq.dao.CustomerMapper" >
  <resultMap id="BaseResultMap" type="zpq.bean.Customer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="Qq" property="qq" jdbcType="CHAR" />
    <result column="Email" property="email" jdbcType="CHAR" />
    <result column="Mobile" property="mobile" jdbcType="CHAR" />
    <result column="Nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="oneLevel_address" property="onelevelAddress" jdbcType="VARCHAR" />
    <result column="detailed_address" property="detailedAddress" jdbcType="VARCHAR" />
    <result column="isDeleted" property="isdeleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, account, password, Qq, Email, Mobile, Nickname, oneLevel_address, detailed_address, 
    isDeleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zpq.bean.CustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="zpq.bean.CustomerExample" >
    delete from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zpq.bean.Customer" >
    insert into customer (id, account, password, 
      Qq, Email, Mobile, Nickname, 
      oneLevel_address, detailed_address, isDeleted
      )
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{qq,jdbcType=CHAR}, #{email,jdbcType=CHAR}, #{mobile,jdbcType=CHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{onelevelAddress,jdbcType=VARCHAR}, #{detailedAddress,jdbcType=VARCHAR}, #{isdeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="zpq.bean.Customer" >
    insert into customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="qq != null" >
        Qq,
      </if>
      <if test="email != null" >
        Email,
      </if>
      <if test="mobile != null" >
        Mobile,
      </if>
      <if test="nickname != null" >
        Nickname,
      </if>
      <if test="onelevelAddress != null" >
        oneLevel_address,
      </if>
      <if test="detailedAddress != null" >
        detailed_address,
      </if>
      <if test="isdeleted != null" >
        isDeleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=CHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="onelevelAddress != null" >
        #{onelevelAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null" >
        #{detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null" >
        #{isdeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zpq.bean.CustomerExample" resultType="java.lang.Integer" >
    select count(*) from customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        Qq = #{record.qq,jdbcType=CHAR},
      </if>
      <if test="record.email != null" >
        Email = #{record.email,jdbcType=CHAR},
      </if>
      <if test="record.mobile != null" >
        Mobile = #{record.mobile,jdbcType=CHAR},
      </if>
      <if test="record.nickname != null" >
        Nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.onelevelAddress != null" >
        oneLevel_address = #{record.onelevelAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.detailedAddress != null" >
        detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.isdeleted != null" >
        isDeleted = #{record.isdeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customer
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      Qq = #{record.qq,jdbcType=CHAR},
      Email = #{record.email,jdbcType=CHAR},
      Mobile = #{record.mobile,jdbcType=CHAR},
      Nickname = #{record.nickname,jdbcType=VARCHAR},
      oneLevel_address = #{record.onelevelAddress,jdbcType=VARCHAR},
      detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      isDeleted = #{record.isdeleted,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zpq.bean.Customer" >
    update customer
    <set >
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        Qq = #{qq,jdbcType=CHAR},
      </if>
      <if test="email != null" >
        Email = #{email,jdbcType=CHAR},
      </if>
      <if test="mobile != null" >
        Mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="nickname != null" >
        Nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="onelevelAddress != null" >
        oneLevel_address = #{onelevelAddress,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null" >
        detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="isdeleted != null" >
        isDeleted = #{isdeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zpq.bean.Customer" >
    update customer
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      Qq = #{qq,jdbcType=CHAR},
      Email = #{email,jdbcType=CHAR},
      Mobile = #{mobile,jdbcType=CHAR},
      Nickname = #{nickname,jdbcType=VARCHAR},
      oneLevel_address = #{onelevelAddress,jdbcType=VARCHAR},
      detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      isDeleted = #{isdeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>